# $Id: tkmenu.rd,v 1.14 2001/03/18 12:39:31 arai Exp $
# Class TkMenu is defined in tk.rb
=begin
= TkMenu

メニューウィジェットのクラスです。
メニューウィジェットはトップレベルのウィンドウです。

((<TkMenubutton>))も参照

  require "tk"

  v  = TkVariable.new
  v1 = TkVariable.new
  v2 = TkVariable.new
  v3 = TkVariable.new

  menu = TkMenu.new {
    title "menu entries"
    tearoff false
    c = proc { p self.entryconfiginfo "end"}
    add "command", {"label"=>"hoge", "command"=>c}
    add "separator"
    add "checkbutton", {"label"=>"hoge1", "command"=>c, "variable"=>v1, "onvalue"=>1}
    add "checkbutton", {"label"=>"hoge2", "command"=>c, "variable"=>v2}
    add "checkbutton", {"label"=>"hoge3", "command"=>c, "variable"=>v3}
    add "separator"
    add "radiobutton", {"label"=>"hoge1", "command"=>c, "variable"=>v}
    add "radiobutton", {"label"=>"hoge2", "command"=>c, "variable"=>v}
    add "radiobutton", {"label"=>"hoge3", "command"=>c, "variable"=>v}
    20.times {|i| p menutype i}
    activate 0
  }

  Tk.root.bind('Button-1') {|e| menu.post(e.x_root, e.y_root) }

  Tk.mainloop

メソッドの説明の中で((*位置*))は、以下のいずれかを指します。

*数値

 指定した数値番目の項目(上端は0です)

*"@数値"

 上から数値ピクセルだけ下にある項目

*"end" または "last"

 最後の項目

*"active"

 アクティブになっている項目

*"none"

 どの項目もアクティブにしない

*パターン

 パターンに一致する項目(パターンのマッチにはシェルと同じように
 (('"*","?","[...]"'))を使用する)
 ((-ラベルとの一致？-))

== スーパークラス:

((<TkWindow>))

== インクルードしているモジュール:

((<TkTreatMenuEntryFont>))

== メソッド:

--- TkMenu#activate(index)
#@todo
    ((|index|))で指定した((*位置*))のメニュー項目をアクティブにします。

--- TkMenu#add(type, keys=nil)
#@todo
    ((|type|))で指定したメニュー項目を追加します。((|type|))は以下のいずれ
    かです。

      *"command"

       ボタン
      *"checkbutton"

       チェックボタン
      *"radiobutton"

       ラジオボタン
      *"cascade"

       カスケードメニュー
      *"separator"

       セパレータ(横線)

    ((|keys|))には、メニュー項目に対するオプションをハッシュで指定します。    オプションには以下があります。

      *"activebackground"
      *"activeforeground"
      *"accelerator"

       メニュー項目の右端に表示する文字列(対応するキーを明示するのに使用する)
      *"background"
      *"bitmap"
      *"columnbreak"
      *"command"
      *"font"
      *"foreground"
      *"hidemargin"
      *"image"
      *"indicatoron"
      *"label"

       メニュー項目として表示する文字列
      *"menu"
      *"offvalue"
      *"onvalue"
      *"selectcolor"
      *"selectimage"
      *"state"
      *"underline"
      *"value"
      *"variable"

--- TkMenu#index(index)
#@todo
    ((|index|))で指定した((*位置*))の項目が何番目かを返します。

--- TkMenu#invoke(index)
#@todo
    ((|index|))で指定した((*位置*))の項目を実行します。

--- TkMenu#insert(index, type, keys=nil)
#@todo
    ((|index|))で指定した((*位置*))にメニュー項目を追加します。((|type|))、((|keys|))は
    ((<TkMenu#add>)) と同じです。

--- TkMenu#delete(index, last=None)
#@todo
    ((|index|))で指定した((*位置*))の項目を削除します。((|last|))を指定した場合は、
    ((|index|))から((|last|))までの項目をすべて削除します。

--- TkMenu#popup(x, y, index=nil)
#@todo

--- TkMenu#post(x, y)
#@todo
    (({self}))を引数で指定した座標に配置します。

      require "tk"
      menu = TkMenu.new {
        add 'command', {'label'=>'foo1', 'command'=>proc { puts '1'}}
        add 'command', {'label'=>'foo2', 'command'=>proc { puts '2'}}
        add 'command', {'label'=>'foo3', 'command'=>proc { puts '3'}}
      }
      Tk.root.bind 'Button-3', proc {|e| menu.post e.x_root, e.y_root }
      Tk.root.bind 'Button',   proc {|e| menu.unpost }
      Tk.mainloop

    ((-上記例では、イベントコールバック関数の実行順序に関して
    説明しなければならない部分を含んでいる-))

--- TkMenu#postcascade(index)
#@todo
    カスケードメニューを((|index|))で指定した((*位置*))に配置します。    ((-うそかも-))

--- TkMenu#postcommand(cmd=Proc.new)
#@todo
    (({self}))を配置したときに((|cmd|))を実行します。((<TkMenu#post>))メソッドから
    呼び出されます。

--- TkMenu#tearoffcommand(cmd=Proc.new)
#@todo

--- TkMenu#menutype(index)
#@todo
    ((-dummy-))
    *"menubar"
    *"tearoff"
    *"normal"

--- TkMenu#unpost
#@todo
    (({self}))の配置を取り下げます。非表示になります。

--- TkMenu#yposition(index)
#@todo
    ((|index|))で指定した((*位置*))の項目の位置(ピクセル)を返します。

--- TkMenu#entrycget(index, key)
#@todo
    ((|index|))で指定した((*位置*))のメニュー項目の((|key|))で指定したオプションの値を
    返します。

--- TkMenu#entryconfiure(index, key, val=None)
--- TkMenu#entryconfiure(index, hash)
#@todo
    ((|index|))で指定した((*位置*))のメニュー項目のオプション((|key|))を((|val|))にし
    합니다.

    第2引数((|hash|))にハッシュを指定した場合、そのキーがオプション名、値
    がオプションの設定値として扱われます。

--- TkMenu#entryconfiginfo(index, key=nil)
#@todo
    ((|index|))で指定した((*位置*))のメニュー項目のオプション((|key|))の値を((|val|))にし
    합니다.

== 標準オプション

((<TkObject#activebackground>))

((<TkObject#activeborderwidth>))

((<TkObject#activeforeground>))

((<TkObject#background>))

((<TkObject#borderwidth>))

((<TkObject#cursor>))

((<TkObject#disabledforeground>))

((<TkObject#font>))

((<TkObject#foreground>))

((<TkObject#relief>))

((<TkObject#takefocus>))

== オプション

### --- TkMenu#postcommand

--- TkMenu#selectcolor
#@todo

--- TkMenu#tearoff
#@todo

--- TkMenu#tearoffcommand
#@todo

--- TkMenu#title
#@todo

### --- TkMenu#type

=end
# $Id$
# Class TkMenuClone is defined in tk.rb
=begin
= TkMenuClone

== スーパークラス:

((<TkMenu>))

== クラスメソッド:

--- TkMenuClone.new(parent, type=None)
#@todo

=end
# $Id$
# Class TkOptionMenubutton::OptionMenu is defined in tk.rb
=begin
= TkOptionMenubutton::OptionMenu

== スーパークラス:

((<TkMenu>))

== クラスメソッド:

--- TkOptionMenubutton::OptionMenu.new(parent)
#@todo

=end
# $Id$
# Class TkSysMenu_Apple is defined in tk.rb
=begin
= TkSysMenu_Apple

== スーパークラス:

((<TkMenu>))

== インクルードしているモジュール:

((<TkSystemMenu>))

=end
# $Id$
# Class TkSysMenu_Help is defined in tk.rb
=begin
= TkSysMenu_Help

== スーパークラス:

((<TkMenu>))

== インクルードしているモジュール:

((<TkSystemMenu>))

=end
# $Id$
# Class TkSysMenu_System is defined in tk.rb
=begin
= TkSysMenu_System

== スーパークラス:

((<TkMenu>))

== インクルードしているモジュール:

((<TkSystemMenu>))

=end
