# $Id: tkevent.rd,v 1.13 2000/02/06 05:59:51 arai Exp $
# Class TkComm::Event is defined in tk.rb
=begin
= TkComm::Event

発生した((<イベント>))の状態を表すためのクラスです。
((<TkBindCore#bind>))の第3引数を省略した場合、このクラスのインスタンスが
((<イベントコールバック関数>))の引数として渡されます。

 require "tk"
 Tk.root.bind('Enter') {|e| p e.is_a?TkComm::Event}
 Tk.mainloop

 => true        # <- マウスカーソルがウィンドウに入ると表示されます

((*注意*))
あまり実害はありませんが、((<Object#type>))(オブジェクトのクラスを返す
メソッド)は再定義されているので

 require "tk"
 Tk.root.bind('Enter') {|e| p e.type}
 Tk.mainloop

で、(({TkComm::Event}))とは表示されません。

== スーパークラス:

((<Object>))

== クラスメソッド:

--- TkComm::Event#initialize(serial,a,b,c,d,f,h,k,m,o,p,s,t,w,x,y,aa,bb,dd,ee,kk,nn,rr,ss,tt,ww,xx,yy)
#@todo
    イベントオブジェクトを生成します。    各引数の値は、対応する属性メソッドの値になります。

== メソッド:

--- TkComm::Event#serial
#@todo
    %#

--- TkComm::Event#above
#@todo
    %a

--- TkComm::Event#num
#@todo
    %b

    イベントを発生させたマウスボタンの番号を返します。

    ButtonPress,ButtonReleaseイベントのときだけ意味を持ちます。

--- TkComm::Event#count
#@todo
    %c

--- TkComm::Event#detail
#@todo
    %d

--- TkComm::Event#focus
#@todo
    %f

    イベントが発生したときのフォーカスの状態をtrue/falseで返します。

    Enter, Leaveイベントのときだけ意味を持ちます。

--- TkComm::Event#height
#@todo
    %h

    Configure,Exposeイベントのときだけ意味を持ちます。

--- TkComm::Event#keycode
#@todo
    %k

    イベントを発生させたキーコードを返します。

    KeyPress,KeyReleaseイベントのときだけ意味を持ちます。

--- TkComm::Event#mode
#@todo
    %m

--- TkComm::Event#override
#@todo
    %o

--- TkComm::Event#place
#@todo
    %p

--- TkComm::Event#state
#@todo
    %s

    以下の値の論理和を返します。((-Visibilityのときは、違う-))
    *Shift               1
    *Lock                2
    *Control             4
    *Mod1                8
    *Mod2                16
    *Mod3                32
    *Mod4                64
    *Mod5                128

    これらの数値は((<X Window System>))の(({XEvent}))構造体の(({state}))の
    値です。((-RCSのIDが "$XConsortium: X.h,v 1.69 94/04/17 20:10:48 dpw Exp $"
    であるX.hを元に記述した-))

    ((-WinやMacではどうなる？-))

    ButtonPress,ButtonRelease,Enter,KeyPress,KeyRelease,Leave,Motion,Visibility
    イベントのときだけ意味を持ちます。

--- TkComm::Event#time
#@todo
    %t

--- TkComm::Event#width
#@todo
    %w

    Configure,Exposeイベントのときだけ意味を持ちます。

--- TkComm::Event#x
#@todo
    %x

    イベントが発生したときのマウスカーソルのX座標を返します。

--- TkComm::Event#y
#@todo
    %y

    イベントが発生したときのマウスカーソルのY座標を返します。

--- TkComm::Event#char
#@todo
    %A

    イベントに対応するASCII文字を返します。(ただし0〜9キーを押したときは
    Fixnumで0〜9を返します)

    KeyPress,KeyReleaseイベントのときだけ意味を持ちます。

    ((-Fixnumを返しているのは望ましい動作じゃないだろう-))

--- TkComm::Event#borderwidth
#@todo
    %B

--- TkComm::Event#wheel_delta
#@todo
    %D

--- TkComm::Event#send_event
#@todo
    %E

    true/false

--- TkComm::Event#keysym
#@todo
    %K

    イベントに対応するキーシンボルを返します。    KeyPress,KeyReleaseイベントのときだけ意味を持ちます。

--- TkComm::Event#keysym_num
#@todo
    %N

    イベントに対応するキーシンボルの番号を返します。    KeyPress,KeyReleaseイベントのときだけ意味を持ちます。

--- TkComm::Event#rootwin_id
#@todo
    %R

--- TkComm::Event#subwindow
#@todo
    %S

--- TkComm::Event#type
#@todo
    %T

    イベントの型を数値で返します。返される数値は以下のイベント型に対応しま
    す。

    *KeyPress                2
    *KeyRelease              3
    *ButtonPress             4
    *...

    これらの数値は((<X Window System>))の(({XEvent}))構造体の(({type}))の
    値です。((-RCSのIDが "$XConsortium: X.h,v 1.69 94/04/17 20:10:48 dpw Exp $"
    であるX.hを元に記述した-))

    ((-文字列を返した方がよいだろう？WinやMacではどうなる？-))

--- TkComm::Event#widget
#@todo
    %W

    イベントが発生したウィジェットを返します。

--- TkComm::Event#x_root
#@todo
    %X

    イベントが発生したときのルートウィンドウ上でのマウスカーソルのX座標を
    返します。ButtonPress,ButtonRelease,KeyPress,KeyRelease,Motionイベント
    で意味を持ちます。

--- TkComm::Event#y_root
#@todo
    %Y

    イベントが発生したときのルートウィンドウ上でのマウスカーソルのY座標を
    返します。ButtonPress,ButtonRelease,KeyPress,KeyRelease,Motionイベント
    で意味を持ちます。

=end
