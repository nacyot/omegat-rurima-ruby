#@since 1.8.0

= class CSV::Reader < Object

include Enumerable

CSVの読み込み時のベースとなるクラス


== Class Methods

--- parse(str_or_readable, fs = ',', rs = nil) -> CSV::StringReader
--- parse(str_or_readable, fs = ',', rs = nil) {|row| ... } -> nil

CSVデータを解析して、[[c:CSV::StringReader]]を返します。
ブロックに渡された場合はパースした結果を1列ずつArrayとして渡します。

@param str_or_readable パースする対象の文字列
@param fs フィールドセパレータの指定。          기본설정은 nil이며, 이 때 구분자는 ','가 됩니다.
@param rs 행 구분 문자를 지정합니다.nil 지정시 기본값은 CrLf / Lf.
          Cr으로 나누고 싶으면 ?\r을 지정합니다.

===== 주의

パース時に""(空文字)と値なしを区別します。
例えば、a, "", , b の行をパースした場合には ["a", "", nil, "b"] の配列を返します。

예:
  CSV::Reader.parse("1,2,3\nA,B,C\n"){|row|
    p row
  }

--- create(str_or_readable, fs = ',', rs = nil) -> CSV::StringReader

CSVデータを解析して、解析結果を格納した[[c:CSV::StringReader]]を返します。

@param str_or_readable パースする対象の文字列
@param fs フィールドセパレータの指定。          기본설정은 nil이며, 이 때 구분자는 ','가 됩니다.
@param rs 행 구분 문자를 지정합니다.nil 지정시 기본값은 CrLf / Lf.
          Cr으로 나누고 싶으면 ?\r을 지정합니다.


== Instance Methods

--- each {|row| ... } -> nil
自身から 1 行ずつ読み込み、それを引数として与えられたブロックを実行します。

--- shift -> Array
CSVをパースした結果から1行分を取り除き、取り除いた1行を配列として返します。
shiftは破壊的メソッドです。

===== 주의

パース時に""(空文字)と値なしを区別します。
例えば、a, "", , b の行をパースした場合には ["a", "", nil, "b"] の配列を返します。

--- close -> nil
内部的にterminateメソッドを呼び出します。

== Private Instance Methods

--- initialize(dev) -> ()
本メソッドは再定義 or サブクラスで定義されることを想定されています。
再定義せずに呼び出した場合は例外RuntimeErrorが発生します。

--- get_row(row) -> ()
本メソッドは再定義 or サブクラスで定義されることを想定されています。
再定義せずに呼び出した場合は例外NotImplementedErrorが発生します。

--- terminate -> ()
終了時処理を行う場合に再定義してください。

#@end
