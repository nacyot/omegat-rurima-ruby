#@since 1.9.1
= class CSV::Row < Object
extend Forwardable
include Enumerable

[[c:CSV::Row]] は配列やハッシュのように似ています。

配列のようにフィールドの順序を保持していて、複製する事もできます。
また、ハッシュのように名前でフィールドにアクセスする事もできます。

ヘッダ行の処理が有効である場合は [[c:CSV]] から返される全ての行はこのクラスのインスタンスです。

以下のメソッドを [[c:Array]] に委譲します。

  * empty?()
  * length()
  * size()

== Singleton Methods

--- new(headers, fields, header_row = false) -> CSV::Row

객체를 초기화합니다.

一方の配列が他方の配列よりも短い場合、不足しているところは nil になります。

@param headers ヘッダの配列を指定します。

@param fields フィールドの配列を指定します。

@param header_row ヘッダ行である場合は真を指定します。그렇지 않으면 false를 지정합니다.
                  기본 설정은 false입니다.

@see [[m:CSV::Row#header_row?]], [[m:CSV::Row#field_row?]]


== Instance Methods

--- <<(arg) -> self

自身に与えられたデータを追加します。

@param arg 2 要素の配列か 1 要素のハッシュか任意のオブジェクトを指定します。           2 要素の配列を与えた場合は、ヘッダとフィールドのペアを追加します。           1 要素のハッシュを与えた場合は、キーをヘッダ、値をフィールドとして追加します。           それ以外の場合は、ヘッダを nil 、フィールドを与えられた値として追加します。

@return メソッドチェーンのために自身を返します。

--- ==(other) -> bool

自身が other と同じヘッダやフィールドを持つ場合に真を返します。그렇지 않으면 false를 리턴합니다.

@param other 比較対象の [[c:CSV::Row]] のインスタンスを指定します。

--- field(header_or_index, minimum_index = 0) -> object | nil
--- [](header_or_index, minimum_index = 0) -> object | nil

ヘッダの名前かインデックスで値を取得します。フィールドが見つからなかった場合は nil を返します。

@param header_or_index ヘッダの名前かインデックスを指定します。

@param minimum_index このインデックスより後で、ヘッダの名前を探します。                     重複しているヘッダがある場合に便利です。

--- []=(header_or_index, value)

ヘッダの名前かインデックスでフィールドを探し、値をセットします。

末尾より後ろのインデックスを指定すると、ヘッダの名前は nil になります。
存在しないヘッダを指定すると、新しい要素を末尾に追加します。

@param header_or_index ヘッダの名前かインデックスを指定します。

@param value 값을 지정합니다.

@see [[m:CSV::Row#field]]

--- []=(header, offset, value)

ヘッダの名前でフィールドを探し、値をセットします。

@param header ヘッダの名前を指定します。

@param offset このインデックスより後で、ヘッダの名前を探します。              重複しているヘッダがある場合に便利です。

@param value 값을 지정합니다.

@see [[m:CSV::Row#field]]

--- delete(header_or_index, minimum_index = 0) -> [object, object] | nil

ヘッダの名前かインデックスで行からフィールドを削除するために使用します。

@param header_or_index ヘッダの名前かインデックスを指定します。

@param minimum_index このインデックスより後で、ヘッダの名前を探します。                     重複しているヘッダがある場合に便利です。

@return 削除したヘッダとフィールドの組を返します。削除対象が見つからなかった場合は nil を返します。

@see [[m:CSV::Row#field]]

--- delete_if{|header, field| ... } -> self

与えられたブロックにヘッダとフィールドのペアを渡して評価します。
評価した結果が真である場合に、その組を自身から削除します。

@return メソッドチェーンのために自身を返します。

--- each{|header, field| ... } -> self

与えられたブロックにヘッダとフィールドの組を渡して評価します。

@return メソッドチェーンのために自身を返します。

--- empty?-> bool

内部で保持している @row へ委譲します。


--- field?(data) -> bool

自身に与えられた値が含まれている場合は真を返します。그렇지 않으면 false를 리턴합니다.

@param data この行に含まれているかどうか調べたい値を指定します。

--- field_row?-> bool
フィールド行であれば真を返します。그렇지 않으면 false를 리턴합니다.

--- fields(*headers_and_or_indices) -> Array
--- values_at(*headers_and_or_indices) -> Array

与えられた引数に対応する値の配列を返します。

要素の探索に [[m:CSV::Row.field]] を使用しています。

@param headers_and_or_indices ヘッダの名前かインデックスか [[c:Range]]
                              のインスタンスか第 1 要素がヘッダの名前で
                              第 2 要素がオフセットになっている 2 要素
                              の配列をいくつでも指定します。混在するこ
                              とができます。

@return 引数を与えなかった場合は全ての要素を返します。

  csv = CSV.new("a,b,c\n1,2,3", headers: true)
  table = csv.read
  row = table.first
  row.values_at("a", 1, 2..3) # => ["1", "2", "3", nil]

--- header?(name) -> bool
--- include?(name) -> bool
自身のヘッダに与えられた値が含まれている場合は真を返します。그렇지 않으면 false를 리턴합니다.

@param name この行のヘッダに含まれているかどうか調べたい値を指定します。

--- header_row?-> bool
ヘッダ行であれば真を返します。그렇지 않으면 false를 리턴합니다.

--- headers -> Array
この行のヘッダのリストを返します。

--- index(header, minimum_index = 0) -> Fixnum

与えられたヘッダの名前に対応するインデックスを返します。

@param header ヘッダの名前を指定します。

@param minimum_index このインデックスより後で、ヘッダの名前を探します。                     重複しているヘッダがある場合に便利です。

@see [[m:CSV::Row#field]]

--- inspect -> String
ASCII 互換であるエンコーディングの文字列で自身の情報を返します。

--- length -> Fixnum
--- size -> Fixnum

[[m:Array#length]], [[m:Array#size]] に委譲します。

--- push(*args) -> self
複数のフィールドを追加するためのショートカットです。

以下とおなじです:
  args.each { |arg| csv_row << arg }

@return メソッドチェーンのために自身を返します。

--- to_csv -> String
--- to_s -> String

自身を CSV な文字列として返します。ヘッダは使用しません。

--- to_hash -> Hash

自身をシンプルなハッシュに変換します。

フィールドの順序は無視されます。
重複したフィールドは削除されます。

== Protected Instance Methods

--- row -> Array

同値性を比較するために使用する内部的なデータです。

#@else
= class CSV::Row < Array
CSV形式1行分のデータ（Row）を操作するためのクラス。
#@# 1.8.2 以降で deprecated


== Instance Methods

#@until 1.8.2

--- match(rhs) -> bool
自分自身と引数rhsを比較しtrue/falseを返します。

比較方法としては、[[c:CSV::Row]]オブジェクトの各Cellのデータを個別にCSV::Cell#matchで比較を行いそれらの全ての返り値がtrueの時のみtrueを返します。

@param rhs 比較される[[c:CSV::Row]]クラスのオブジェクト

===== 주의

이 메소드는 1.8.2부터 사용할 수 없습니다.

--- to_a -> Array
自分自身を[[c:Array]]オブジェクトとして返します。

===== 주의

이 메소드는 1.8.2부터 사용할 수 없습니다.


#@end
#@end
