= class JSON::State < Object
alias JSON::Ext::Generator::State

Ruby オブジェクトから JSON 形式の文字列を生成する間、
JSON 形式の文字列を生成するための設定を保持しておくために使用するクラスです。

== Singleton Methods

--- new(options = {}) -> JSON::State

객체를 초기화합니다.

@param options ハッシュを指定します。       指定可能なオプションは以下の通りです。

: :indent
  インデントに使用する文字列を指定します。デフォルトは空文字列です。: :space
  JSON 形式の文字列のトークン間に挿入する文字列を指定します。デフォルトは空文字列です。: :space_before
  JSON 形式の文字列中で JavaScript のオブジェクトを表す部分にある ':' の
  前に挿入する文字列をセットします。デフォルトは空文字列です。: :object_nl
  JSON 形式の文字列中に現れる JavaScript のオブジェクトの行末に挿入する文字列を指定します。  デフォルトは空文字列です。: :array_nl
  JSON 形式の文字列中に現れる JavaScript の配列の行末に挿入する文字列を指定します。  デフォルトは空文字列です。: :check_circular
  真を指定した場合、生成するオブジェクトの循環をチェックします。  この動作がデフォルトです。: :allow_nan
  真を指定した場合、[[m:JSON::NaN]], [[m:JSON::Infinity]],
  [[m:JSON::MinusInfinity]] を生成することを許すようになります。  偽を指定した場合、これらの値を生成しようとすると例外が発生します。  기본 설정은 false입니다.


--- from_state(options) -> JSON::State

与えられた options によって生成した [[c:JSON::State]] のインスタンスを返します。

@param options [[c:JSON::State]] のインスタンスか、ハッシュを指定します。

@return options がハッシュである場合は、それによって初期化した [[c:JSON::State]] を
        返します。options が [[c:JSON::State]] のインスタンスである場合は単に
        options を返します。いずれでも無い場合は、何も設定されていない [[c:JSON::State]] の
        インスタンスを返します。

== Public Instance Methods

--- allow_nan?-> bool

NaN, Infinity, -Infinity を生成できる場合、真を返します。그렇지 않으면 false를 리턴합니다.

@see [[rfc:4627]]

--- array_nl -> String

JSON の配列の後に出力する文字列を返します。

--- array_nl=(str)

JSON の配列の後に出力する文字列をセットします。

--- check_circular?-> bool

循環参照のチェックを行う場合は、真を返します。그렇지 않으면 false를 리턴합니다.

--- configure(options = {}) -> self

与えられたハッシュで自身を設定します。

オプションで使用するハッシュのキーについては [[m:JSON::State.new]] を参照してください。

@param options このオブジェクトの設定をするためのハッシュを指定します。

@see [[m:JSON::State.new]]

--- forget(object) -> object

[[m:JSON::State#remember]] で記録したオブジェクトを記録から削除します。

--- indent -> String

インデントに使用する文字列を返します。

--- indent=(string)

インデントに使用する文字列をセットします。

@param string インデントに使用する文字列を指定します。

--- max_nesting -> Integer

生成される JSON 形式の文字列のネストの深さの最大値を返します。

この値がゼロである場合は、ネストの深さのチェックを行いません。

--- max_nesting=(depth)

生成される JSON 形式の文字列のネストの深さの最大値をセットします。

この値にゼロをセットすると、ネストの深さのチェックを行いません。

--- object_nl -> String

JSON 形式の文字列中に現れる JavaScript のオブジェクトの行末に挿入する文字列を返します。

--- object_nl=(string)

JSON 形式の文字列中に現れる JavaScript のオブジェクトの行末に挿入する文字列をセットします。

@param string JSON 形式の文字列中に現れる JavaScript のオブジェクトの行末に挿入する文字列を指定します。

--- remember(object) -> true

与えられたオブジェクトのオブジェクト ID を記録します。

ここで記録したオブジェクトはデータ構造の循環をチェックするために使用します。

@param object 任意のオブジェクトを指定します。

--- seen?(object) -> bool

与えられたオブジェクトが既に生成済みである場合は真を返します。그렇지 않으면 false를 리턴합니다.

このメソッドはデータ構造の循環をチェックするために使用します。

--- space -> String

JSON 形式の文字列のトークン間に挿入する文字列を返します。

--- space=(string)

JSON 形式の文字列のトークン間に挿入する文字列をセットします。

@param string JSON 形式の文字列のトークン間に挿入する文字列を指定します。

--- space_before -> String

JSON 形式の文字列中で JavaScript のオブジェクトを表す部分にある ':' の
前に挿入する文字列を返します。

--- space_before=(string)

JSON 形式の文字列中で JavaScript のオブジェクトを表す部分にある ':' の
前に挿入する文字列をセットします。

@param string JSON 形式の文字列中で JavaScript のオブジェクトを表す部分にある ':' の
              前に挿入する文字列をセットします。


--- to_h -> Hash

自身をハッシュに変換します。

