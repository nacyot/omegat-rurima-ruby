= class DL::CFunc < Object

ダイナミックライブラリの関数を表すクラスです。通常、このクラスを直接使わずに
ラッパークラスである [[c:DL::Function]] を使います。


== Class Methods

--- new(addr, type = DL::TYPE_VOID, name = '', calltype = :cdecl)

指定された addr が指すライブラリ関数を表す CFunc オブジェクトを生成して返します。

@param addr [[m:DL::Handle#sym]] が返した整数を指定します。

@param type 関数の返り値の型を [[c:DL]] で定義された定数で指定します。

@param name 関数の名前を文字列で指定します。

@param calltype 関数の呼出規約を Symbol オブジェクトで指定します。サポートされている
                規約は :cdecl と :stdcall です。

@see [[url:http://ja.wikipedia.org/wiki/%E5%91%BC%E5%87%BA%E8%A6%8F%E7%B4%84]]


== Module Functions

--- last_error    -> Integer
#@todo 

最後に関数が呼び出されたときの errno を整数で返します。
この値はスレッドローカルです。

@see [[man:errno(3)]]


== Instance Methods

--- [](arry)      -> Integer | Float | nil
--- call(arry)    -> Integer | Float | nil
#@todo 

自身が表すライブラリ関数を呼び出します。

自身の返り値の型([[m:DL::CFunc#ctype]])が double か float である場合は、返り値を
Ruby の [[c:Float]] オブジェクトに変換して返します。
返り値の型が void の場合は nil を返します。それ以外の場合は整数として返します。

@param arry 関数の引数を整数の配列で指定します。

@see [[m:Array#pack]], [[m:String#unpack]]

--- calltype         -> Symbol
--- calltype=(sym)

自身の呼出規約を表すアクセサです。
サポートされている規約は :cdecl と :stdcall です。

@param sym 自身の呼出規約を Symbol オブジェクトで指定します。

@see [[url:http://ja.wikipedia.org/wiki/%E5%91%BC%E5%87%BA%E8%A6%8F%E7%B4%84]]

--- ctype     -> Integer
--- ctype=(type)

自身の返り値の型を表すアクセサです。

@param type 自身の返り値の型を DL に定義された定数で指定します。

--- name   -> String

自身の名前を文字列で返します。

--- ptr         -> Integer
--- ptr=(addr)

自身が表すライブラリ関数のアドレスを表すアクセサです。

@param addr ライブラリ関数のアドレスを整数で指定します。

--- to_i    -> Integer

自身が表すライブラリ関数のアドレスを返します。
[[m:DL::CFunc#ptr]] と同じです。


--- inspect   -> String
--- to_s      -> String

배열의 정보를 인간이 이해하기 쉬운 문자열로 리턴합니다.
