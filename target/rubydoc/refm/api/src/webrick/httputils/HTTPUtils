= module WEBrick::HTTPUtils

HTTP のためのユーティリティ関数を提供します。

== Module Functions

--- load_mime_types(file)    -> Hash

Apache の mime.types ファイル形式の file を読み込み
拡張子をキー、MIME タイプを値とするハッシュを返します。キーも値も文字列です。

@param file Apache の mime.types ファイル形式のファイルの名前を文字列で指定します。

  p WEBrick::HTTPUtils.load_mime_types('/etc/mime.types')
  # => {"htm"=>"text/html", "rpm"=>"application/x-rpm", ... }

--- mime_type(filename, mime_tab)    -> String

ファイル名 filename の拡張子をもとにその MIME タイプを指定された mime_tab 
から探して文字列として返します。MIME タイプが見つからない場合は "application/octet-stream"
を返します。

@param filename ファイル名を文字列で指定します。

@param mime_tab 拡張子をキー、MIME タイプを値とするハッシュを指定します。

  include WEBrick::HTTPUtils
  p mime_type('index.html', DefaultMimeTypes)     #=> "text/html"
  p mime_type('index.html.ja', DefaultMimeTypes)  #=> "text/html"
  p mime_type('index.hoge', DefaultMimeTypes)     #=> "application/octet-stream"

--- parse_header(raw) -> Hash

HTTP ヘッダをパースして結果をハッシュに格納して返します。

@param raw 生のヘッダを表す文字列を指定します。

--- split_header_value(str) -> Array

HTTP ヘッダの値を分割して返します。

@param str HTTP ヘッダの値を返します。

--- parse_range_header(ranges_specifier)
#@todo ???

@param ranges_specifier 

--- dequote(str) -> String

与えられた文字列からダブルクオートとバックスラッシュを削除して返します。

@param str 文字列を指定します。

--- quote(str) -> String

与えられた文字列をダブルクオートでクオートします。

与えられた文字列に含まれているダブルクオートはバックスラッシュでエスケー
プします。

@param str 文字列を指定します。

--- escape(str) -> String

与えられた文字列を数値参照文字列に変換します。

以下の正規表現を使用して変換します。

  control  = (0x0..0x1f).collect{|c| c.chr }.join + "\x7f"
  space    = " "
  delims   = '<>#%"'
  unwise   = '{}|\\^[]`'
  nonascii = (0x80..0xff).collect{|c| c.chr }.join
  /[#{Regexp.escape(control + space + delims + unwise + nonascii)}]/n

@param str 文字列を指定します。

--- unescape(str) -> String

与えられた文字列を数値参照文字列から元の文字列に変換します。

@param str 文字列を指定します。

#@since 1.8.3
--- escape_path(str) -> String

与えられた文字列を数値参照文字列に変換します。

以下の正規表現を使用して変換します。

  num      = '0123456789'
  lowalpha = 'abcdefghijklmnopqrstuvwxyz'
  upalpha  = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  mark     = '-_.!~*\'()'
  unreserved = num + lowalpha + upalpha + mark
  /[^#{Regexp.escape(unreserved + ":@&=+$,")}]/n

@param str 文字列を指定します。

#@end

--- escape8bit(str) -> String

与えられた文字列を数値参照文字列に変換します。

@param str 文字列を指定します。

#@#--- normalize_path(path)
#@#todo

#@since 1.8.2
#@#--- parse_qvalues(value)
#@#todo
#@end

#@#--- escape_form(str)
#@#todo

#@#--- unescape_form(str)
#@#todo

#@since 1.8.3
#@#--- _make_regex!(str)
#@#todo
#@end

#@#--- _escape(str, regex)
#@#todo

#@#--- _unescape(str, regex)
#@#todo

#@#--- parse_query(str)
#@#todo

#@#--- parse_form_data(io, boundary)
#@#todo

#@#--- _make_regex(str)
#@#todo

#@#== Constants

--- DefaultMimeTypes -> Hash

ファイルの拡張子をキー、 MIME Type を値とする要素を持つハッシュです。
