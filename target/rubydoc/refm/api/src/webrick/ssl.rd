#@since 1.8.1
[[c:WEBrick::GenericServer]] を SSL/TLS に対応させるための実装。
このファイルを require すると WEBrick::GenericServer が SSL/TLS 対応になる。

ruby 1.8.3 以降では単に require するだけでは SSL/TLS は有効ではなく、
設定で明示的に有効にする必要がある。

= redefine WEBrick::GenericServer < Object


== Class Methods

--- new(config = {}, default = WEBrick::Config::General) -> WEBrick::GenericServer

GenericServer オブジェクトを生成して返します。

config で有効な項目が増えます。以下は増える項目とそのデフォルト値です。

  :ServerSoftware       => "#{svrsoft} OpenSSL/#{osslv}",
  :SSLEnable            => true, # Ruby 1.8.3 以降では false がデフォルトです。  :SSLCertificate       => nil,
  :SSLPrivateKey        => nil,
  :SSLClientCA          => nil,
  :SSLExtraChainCert    => nil,
  :SSLCACertificateFile => nil,
  :SSLCACertificatePath => nil,
  :SSLCertificateStore  => nil,
  :SSLVerifyClient      => ::OpenSSL::SSL::VERIFY_NONE,
  :SSLVerifyDepth       => nil,
  :SSLVerifyCallback    => nil,   # custom verification
  :SSLTimeout           => nil,
  :SSLOptions           => nil,
  :SSLStartImmediately  => true,
  # Must specify if you use auto generated certificate.
  :SSLCertName          => nil,
  :SSLCertComment       => "Generated by Ruby/OpenSSL"

@param config サーバの設定を保存したハッシュを指定します。

@param default サーバのデフォルトの設定を保存したハッシュを指定します。指定された config で
               設定がなかった項目に関してはこの default の値が使われます。

@see [[m:WEBrick::Config::General]]


== Instance Methods

--- ssl_context -> OpenSSL::SSL::SSLContext | nil

サーバが保持する [[c:OpenSSL::SSL::SSLContext]] オブジェクトを返します。

= reopen WEBrick::Config

#@#== Constants

--- SSL -> Hash

以下のほとんどの項目はサーバが保持する [[c:OpenSSL::SSL::SSLContext]] オブジェクト
を設定するためのものです。詳しくは [[c:OpenSSL::SSL::SSLContext]] を参照して下さい。

: :ServerSoftware
  サーバソフト名を設定する。デフォルトでは
  "WEBrick/VERSION (Ruby/VERSION/RELEASE_DATE) OpenSSL/VERSION"。: :SSLEnable
  ssl を有効にするかどうかを設定します。  Ruby 1.8.2 まではデフォルトで true です。  Ruby 1.8.3 以降はデフォルトで false です。: :SSLCertificate
  サーバ証明書を設定します。[[c:OpenSSL::X509::Certificate]] オブジェクトです。  nil の場合、WEBrick は自己署名証明書を自動的に生成します。: :SSLPrivateKey
  サーバの秘密鍵を設定します。[[c:OpenSSL::PKey::PKey]] の
  サブクラスのインスタンスです。: :SSLClientCA
  サーバがクライアント証明書を要求する時にクライアントに送る CA のリストです。  [[m:OpenSSL::SSL::SSLContext#client_ca]] を参照してください。: :SSLExtraChainCert
  証明書チェーンです。所有している証明書からルート CA までの証明書のリストです。  [[m:OpenSSL::SSL::SSLContext#extra_chain_cert]] を参照してください。: :SSLCACertificateFile
  接続相手の検証のために使う、信頼している CA 証明書ファイルのパスです。  [[m:OpenSSL::SSL::SSLContext#ca_file]] を参照してください。: :SSLCACertificatePath
  信頼している CA 証明書ファイルを含むディレクトリのパスです。  [[m:OpenSSL::SSL::SSLContext#ca_path]] を参照してください。: :SSLCertificateStore
  接続相手の証明書の検証のために使う、信頼している CA 証明書を
  含む証明書ストアです。  [[m:OpenSSL::SSL::SSLContext#cert_store]] を参照してください。: :SSLVerifyClient
  検証モードです。  [[m:OpenSSL::SSL::SSLContext#verify_mode]] を参照してください。: :SSLVerifyDepth
  証明書チェイン上の検証する最大の深さです。  [[m:OpenSSL::SSL::SSLContext#verify_depth]] を参照してください。: :SSLVerifyCallback
  オブジェクトに設定されている検証をフィルタするコールバックです。  [[m:OpenSSL::SSL::SSLContext#verify_callback]] を参照してください。: :SSLTimeout
  セッションのタイムアウト秒数です。  [[m:OpenSSL::SSL::SSLContext#timeout]] を参照してください。: :SSLOptions
  オプションフラグです。  [[m:OpenSSL::SSL::SSLContext#options]] を参照してください。: :SSLStartImmediately
#@# よくわからない
: :SSLCertName
  自己署名証明書を作成する場合の証明書の CN を文字列で設定する。: :SSLCertComment
  自己署名証明書を作成する場合の拡張領域の nsComment の値です
  デフォルトは "Generated by Ruby/OpenSSL" です。

= redefine WEBrick::Config

#@#== Constants

--- General -> Hash

[[m:WEBrick::Config::SSL]] の内容がマージされます。

#@end
