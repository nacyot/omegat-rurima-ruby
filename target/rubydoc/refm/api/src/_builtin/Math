= module Math

浮動小数点演算をサポートするモジュールです。

Math モジュールにはさまざま数学関数がモジュール関数として定義されています。
モジュール関数は以下のように，モジュールの特異メソッドとして呼び出す使い方と、
モジュールをインクルードしてレシーバーを省略した形で呼び出す使い方の両方ができます。

=== 예

  pi = Math.atan2(1, 1)*4;
  include Math
  pi2 = atan2(1, 1)*4

== Module Functions

--- acos(x) -> Float

x の逆余弦関数の値をラジアンで返します。

@param x -1.0 <= x <= 1 の範囲内の実数

@return 返される値の範囲は [0, +π] です。

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise Math::DomainError x に範囲外の実数を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@else
@raise Errno::EDOM 引数に範囲外の値を指定した場合に発生します。#@end

--- asin(x) -> Float

x の逆正弦関数の値をラジアンで返します。

@param x -1.0 <= x <= 1 の範囲内の実数

@return 返される値の範囲は[-π/2, +π/2] です。

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise Math::DomainError x に範囲外の実数を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@else
@raise Errno::EDOM 引数に範囲外の値を指定した場合に発生します。#@end

--- atan(x) -> Float

x の逆正接関数の値をラジアンで返します。

@param x 実数

@return 返される値の範囲は [-π/2, +π/2] です。

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

--- atan2(y, x) -> Float

y / x の逆正接関数の値を返します。

@param y 実数
@param x 実数

@return 返される値の範囲は [-π, π] です。


  Math.atan2(1,0)   #=>  1.5707963267949
  Math.atan2(-1,0)  #=> -1.5707963267949

#@since 1.9.1
@raise TypeError y, x に数値以外を指定した場合に発生します。

@raise RangeError y, x に実数以外の数値を指定した場合に発生します。#@end

#@since 1.8.0
--- acosh(x) -> Float

x の逆双曲線余弦関数の値を返します。

=== 定義

    acosh(x) = log(x + sqrt(x * x - 1)) [x >= 1]

@param x x >= 1 の範囲の実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise Math::DomainError x に範囲外の実数を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@else
@raise Errno::EDOM 範囲外の値を引数に指定した場合に発生します。#@end

--- asinh(x) -> Float

x の逆双曲線正弦関数の値を返します。

=== 定義

    asinh(x) = log(x + sqrt(x * x + 1))

@param x 実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

--- atanh(x) -> Float

x の逆双曲線正接関数の値を返します。

=== 定義

    atanh(x) = log((1+x)/(1-x)) / 2     [-1 < x < 1]

@param x -1 < x < 1 の実数

@return 実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise Math::DomainError x に範囲外の実数を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@else
@raise Errno::EDOM 範囲外の値を引数に指定した場合に発生します。#@end

#@end

--- cos(x) -> Float

x の余弦関数の値をラジアンで返します。

@param x 実数

@return [-1, 1] の実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

--- sin(x) -> Float

x の正弦関数の値をラジアンで返します。

@param x 実数

@return [-1, 1] の実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

--- tan(x) -> Float

x の正接関数の値をラジアンで返します。

@param x 実数

@return 実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

#@since 1.8.0
--- cosh(x) -> Float

x の双曲線余弦関数の値を返します。

=== 定義

    cosh(x) = (exp(x) + exp(-x)) / 2

@param x 実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

--- sinh(x) -> Float

x の双曲線正弦関数の値を返します。

=== 定義

    sinh(x) = (exp(x) - exp(-x)) / 2

@param x 実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

--- tanh(x) -> Float

x の双曲線正接関数の値を返します。

=== 定義

    tanh(x) = sinh(x) / cosh(x)

@param x 実数

@return [-1, 1] の範囲の実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

#@end
#@since 1.8.0
--- erf(x) -> Float
x の誤差関数の値を返します。

@param x 実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

--- erfc(x) -> Float
x の相補誤差関数の値を返します。

@param x 実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

#@end

--- exp(x) -> Float

x の指数関数の値を返します。

すなわち e の x 乗の値を返します( e は自然対数の底)。

@param x 実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

@see [[man:exp(3)]]

--- frexp(x) -> [Float, Fixnum]

実数 x の仮数部と指数部の配列を返します。

@param x 実数

#@since 1.9.1
@raise TypeError x に数値以外を指定した場合に発生します。

@raise RangeError x に実数以外の数値を指定した場合に発生します。#@end

#@since 1.8.0
--- hypot(x, y) -> Float

sqrt(x*x + y*y) を返します。

この値は x, y を直交する 2 辺とする直角三角形の斜辺（hypotenuse）の長さです。

@param x 実数
@param y 実数

#@since 1.9.1
@raise TypeError 引数のどちらかに数値以外を指定した場合に発生します。

@raise RangeError 引数のどちらかに実数以外の数値を指定した場合に発生します。#@end

  Math.hypot(3, 4) #=> 5.0

#@end

--- ldexp(x, exp) -> Float

実数 x に 2 の exp 乗をかけた数を返します。

@param x 実数
@param exp 整数。小数点以下切捨て。

#@since 1.9.1
@raise TypeError 引数のどちらかに数値以外を指定した場合に発生します。

@raise RangeError 引数のどちらかに実数以外の数値を指定した場合に発生します。#@end

#@since 1.9.1
--- log(x) -> Float
--- log(x, b) -> Float

x の対数を返します。

@param x 正の実数を指定します。

@param b 底を指定します。省略した場合は自然対数を計算します。

@raise TypeError 引数のどちらかに数値以外を指定した場合に発生します。

@raise RangeError 引数のどちらかに実数以外の数値を指定した場合に発生します。#@else
--- log(x) -> Float

x の自然対数を返します。

@param x 正の実数

@raise Errno::EDOM 引数が負の値である場合に発生します。@raise Errno::ERANGE 引数が 0 の場合に発生します。#@end

#@since 1.9.1
--- log2(x) -> Float

2 を底とする x の対数 (binary logarithm) を返します。#@# Returns the base 2 logarithm of numeric.

@param x 正の実数

@raise TypeError 引数のどちらかに数値以外を指定した場合に発生します。

@raise Math::DomainError x に範囲外の実数を指定した場合に発生します。

@raise RangeError 引数のどちらかに実数以外の数値を指定した場合に発生します。#@end


--- log10(x) -> Float

x の常用対数を返します。

@param x 正の実数

#@since 1.9.1
@raise TypeError 引数のどちらかに数値以外を指定した場合に発生します。

@raise Math::DomainError x に範囲外の実数を指定した場合に発生します。

@raise RangeError 引数のどちらかに実数以外の数値を指定した場合に発生します。#@else
@raise Errno::EDOM 引数が負の値である場合に発生します。@raise Errno::ERANGE 引数が 0 の場合に発生します。#@end

--- sqrt(x) -> Float

x の平方根を返します。

@param x 正の実数

#@since 1.9.1
@raise TypeError 引数のどちらかに数値以外を指定した場合に発生します。

@raise Math::DomainError x に範囲外の実数を指定した場合に発生します。

@raise RangeError 引数のどちらかに実数以外の数値を指定した場合に発生します。#@else
@raise Errno::EDOM  引数が負の値である場合に発生します。#@end

#@since 1.9.1
--- cbrt(x) -> Float

x の立方根を返します。

@param x 実数

#@since 1.9.1
@raise TypeError 引数のどちらかに数値以外を指定した場合に発生します。

@raise RangeError 引数のどちらかに実数以外の数値を指定した場合に発生します。#@end

--- gamma(x) -> Float

x のガンマ関数の値を返します。

@param x 実数

@raise TypeError 引数のどちらかに数値以外を指定した場合に発生します。

@raise Math::DomainError x に負の整数、もしくは -∞ を渡した場合に発生します。

@raise RangeError 引数のどちらかに実数以外の数値を指定した場合に発生します。

--- lgamma(x) -> [Float, Integer]

log(|gamma(x)|) と、gamma(x) の符号を返します。

符号は +1 もしくは -1 で返されます。

@param x 実数

@raise TypeError 引数のどちらかに数値以外を指定した場合に発生します。

@raise Math::DomainError x に -∞ を渡した場合に発生します。

@raise RangeError 引数のどちらかに実数以外の数値を指定した場合に発生します。

@see [[m:Math.#gamma]]

#@end

#@#== Constants

--- E -> Float

自然対数の底

    p Math::E
    # => 2.718281828

--- PI -> Float

円周率

    p Math::PI
    # => 3.141592654

#@since 1.9.1
= class Math::DomainError < StandardError

数学関数(module Math のモジュール関数)で与えた引数が定義域
に含まれていない場合に発生します。

#@end
