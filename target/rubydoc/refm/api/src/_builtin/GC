= module GC

GC는 Ruby 인터프리터의 Garbage Collection의 제어하는 모듈입니다.

@see [[c:ObjectSpace]]

== Singleton Methods

--- disable -> bool

가비지 콜렉터의 사용을 금지합니다.

이전 상태를 리턴합니다. 금지되어 있었다면 true, 아니면 false를 리턴합니다.

@see [[m:GC.enable]]

--- enable -> bool

가비지 콜렌터의 사용을 허가합니다.

이전 상태를 리턴합니다. 금지되어 있었다면 true, 아니면 false를 리턴합니다.

@see [[m:GC.disable]]

--- start -> nil

가비지 콜렉터을 시작합니다.

[[m:GC#garbage_collect]] 메소드나 [[m:ObjectSpace.#garbage_collect]] 메소드와 같은 방식으로 실행됩니다.
[[m:GC.disable]]에 의해 가비지 콜렉터 사용이 금지되어 있으면 작동하지 않습니다.

nil을 반환힙니다.

#@since 1.8.7
--- stress -> bool
--- stress=(value)

GC.stress가 true이면 GC가 사용가능한 모든 시점에 GC를 실행합니다.

@param value 임의의 객체boolean 값으로 변환해서 인식합니다.
#@end

#@since 1.9.1
--- count -> Integer

프로세스가 시작된 이후에 가비지 콜렉터가 실행된 횟수를 [[c:Integer]]로 리턴합니다.
#@end

#@since 1.9.3
--- stat(result_hash = {}) -> {Symbol => Integer}

GC 내부의 통계 정보를 [[c:Hash]]로 리턴합니다.

@param result_hash 리턴값을 받기 위한 해쉬를 지정합니다.생략하면
                   새로운 해쉬를 생성합니다.result_hash의 내용은 
                   덮어쓰기 됩니다.

@return GC 내부의 통계 정보를 [[c:Hash]]로 리턴합니다.

  GC.stat
  # =>
  {
    :count          => 18,
    :heap_used      => 77,
    :heap_length    => 77,
    :heap_increment => 0,
    :heap_live_num  => 23287,
    :heap_free_num  => 8115,
    :heap_final_num => 0,
  }

리턴값은 루비 인터프리터에 따라 다릅니다.이후 버전에서 변경될 가능성이 있습니다.

이 메소드는 C Ruby에서만 사용할 수 있습니다.
#@end


== Instance Methods

--- garbage_collect -> nil

가비지 콜렉터을 시작합니다.

[[m:GC.start]] 메소드나 [[m:ObjectSpace.#garbage_collect]] 메소드와 같은 방식으로 실행됩니다.
[[m:GC.disable]]에 의해 가비지 콜렉터 사용이 금지되어 있으면 작동하지 않습니다.

nil을 반환힙니다.
