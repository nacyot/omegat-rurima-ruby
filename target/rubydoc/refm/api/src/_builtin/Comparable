= module Comparable

비교연상이 가능한 클래스에서 사용하기 위한 Mix-in입니다.이 모듈을 include한
클래스는 비교연산자인 <=> 메소드를 정의할
필요가 있습니다.

self <=> other는
 * self가 other보다 크면 양수
 * self와 other가 같으면 0
 * self가 other보다 작으면 음수
#@since 1.8.0
 * self와 other를 비교할 수 없으면 nil
#@end
을 리턴하도록 만들어야합니다.

다른 비교연산자들은 <=> 메소드를 사용해서 정의됩니다.


== Instance Methods

--- ==(other)    -> bool | nil

#@since 1.8.0
비교연산자 <=>를 사용해 객체가 같은지 판정합니다.
<=>가 0을 리턴하면 true를 리턴하며,그렇지 않으면 false를 리턴합니다.

#@until 1.9.1
<=> 가 nil을 리턴하면 nli을 리턴합니다.
#@end

#@else
self와 other가 같으면 true를 리턴합니다.
#@end

@param other self와 비교하려는 객체를 지정합니다.

--- >(other)    -> bool

#@if (version < "1.8.0")
self가 other보다 큰 경우 true를 리턴합니다.
#@else
비교연산자 <=>를 사용해 self와 other을 비교합니다.
<=>가 양수를 리턴하면 true를 리턴하며,그렇지 않으면 false를 리턴합니다.
#@end

@param other self와 비교하려는 객체를 지정합니다.
#@since 1.8.0
@raise ArgumentError <=> 메소드가 nil을 리턴하면 발생합니다.
#@end

--- >=(other)    -> bool

#@if (version < "1.8.0")
self가 other보다 크거나 같으면 true를 리턴합니다.
#@else
비교연산자 <=>를 사용해 self와 other을 비교합니다.
<=>가 양수나 0을 리턴하면 true를 리턴합니다.
그렇지 않으면 false를 리턴합니다.
#@end

@param other self와 비교하려는 객체를 지정합니다.
#@since 1.8.0
@raise ArgumentError <=> 메소드가 nil을 리턴하면 발생합니다.
#@end

--- <(other)    -> bool

#@if (version < "1.8.0")
self가 other보다 #@else
비교연산자 <=>를 사용해 self와 other을 비교합니다.
<=> 메소드가 음수를 리턴하면 true를 리턴하며,그렇지 않으면 false를 리턴합니다.
#@end

@param other self와 비교하려는 객체를 지정합니다.
#@since 1.8.0
@raise ArgumentError <=> 메소드가 nil을 리턴하면 발생합니다.
#@end

--- <=(other)    -> bool

#@if (version < "1.8.0")
self가 other보다 작거나 같은지 판정합니다.
#@else
비교연산자 <=>를 사용해 self와 other을 비교합니다.
<=>가 음수나 0을 리턴하면 true를 리턴합니다.
그렇지 않으면 false를 리턴합니다.
#@end

@param other self와 비교하려는 객체를 지정합니다.
#@since 1.8.0
@raise ArgumentError <=> 메소드가 nil을 리턴하면 발생합니다.
#@end

--- between?(min, max)    -> bool

#@if (version < "1.8.0")
self가 min과 max를 포함하는 범위 내에 있는 값이면 true를 리턴합니다.
#@else
비교연산자 <=>를 사용해 self가 min과 max를 포함하는 범위 내에 있는 값인지 판정합니다.

아래와 같이 사용합니다.
  self >= min and self <= max
#@end

@param min 범위의 하한을 나타내는 객체를 지정합니다.

@param max 범위의 상한을 나타내는 객체를 지정합니다.

#@since 1.8.0
@raise ArgumentError self <=> min이나、self <=> max의 결과가 nil이면
                     발생합니다.
#@end

  3.between?(1, 5)               #=> true
  6.between?(1, 5)               #=> false
  'cat'.between?('ant', 'dog')   #=> true
  'gnu'.between?('ant', 'dog')   #=> false
