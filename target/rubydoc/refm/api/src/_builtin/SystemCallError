= class SystemCallError < StandardError

Ruby の実装に用いられているシステムコールまたは一部の C 言語関数が失敗した時に発生する例外です。
システムコールの失敗した原因を表すエラーコードを保持します。

多くの場合、実際には SystemCallError そのものではなく
サブクラスである [[c:Errno::EXXX]] (XXX はエラーコードの値によって異なる。システム定義のエラー名と同じ名前) が発生します。자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.


== Class Methods

--- new(error_message) -> SystemCallError
SystemCallError オブジェクトを生成して返します。

@param error_message 에러 메시지를 나타내는 문자열

예:

  p SystemCallError.new("message")
      # => #<SystemCallError: unknown error - message>

#@since 1.8.0
--- new(error_message, errno) -> SystemCallError
--- new(errno) -> SystemCallError
整数 errno に対応する [[c:Errno::EXXX]] オブジェクトを生成して返します。

整数 errno をシステムコールで発生したエラーの原因を示すコードであると解釈し、
対応する例外クラスのインスタンスを生成して返します。

生成されるオブジェクトは SystemCallError の直接のインスタンスではなく、サブクラスのインスタンスです。
それらのサブクラスは [[c:Errno]] モジュール内に定義されています。
対応するサブクラスが存在しないコードを与えた場合には、 SystemCallError の直接のインスタンスが生成されます。

エラーコードの取り得る値および意味はシステムに依存します。자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

@param error_message エラーメッセージを表す文字列
@param errno システム依存のエラーコード
@raise TypeError errno を整数に変換できないときに発生します。
@raise RangeError errno が [[c:Fixnum]] で表せる範囲を超えるときに発生します。

예:

  p SystemCallError.new("message", 2)
      # => #<Errno::ENOENT: No such file or directory - message>
  p SystemCallError.new(2)
      # => #<Errno::ENOENT: No such file or directory>
  p SystemCallError.new(256)
      # => #<SystemCallError: Unknown error 256>

#@end


== Instance Methods

--- errno -> Fixnum | nil

レシーバに対応するシステム依存のエラーコードを返します。

#@since 1.8.0
エラーコードを渡さない形式で生成した場合は nil を返します。

  begin
    raise Errno::ENOENT
  rescue Errno::ENOENT => err
    p err.errno                 # => 2
    p Errno::ENOENT::Errno      # => 2
  end

  begin
    raise SystemCallError, 'message'
  rescue SystemCallError => err
    p err.errno                 # => nil
  end

#@else
実際にシステムコールが発生していない場合には nil を返します。
[[m:Kernel.#raise]] によってシステムコールエラーが発生しているかのように見せかける場合は注意してください。

  begin
    open("nonexistent file")
  rescue Errno::ENOENT => err
    p err.errno                 # => 2
    p Errno::ENOENT::Errno      # => 2
  end

  begin
    raise Errno::ENOENT
  rescue Errno::ENOENT => err
    p err.errno                 # => nil
    p Errno::ENOENT::Errno      # => 2
  end

#@end

なお、例外を発生させずにエラーコードを得るには、
[[m:Errno::EXXX::Errno]] 定数を使います。

= module Errno

システムコールのエラーに対応する例外を集めたモジュールです。

@see [[c:SystemCallError]], [[c:Errno::EXXX]]


= class Errno::EXXX < SystemCallError

システム依存のエラーコードのそれぞれに対応する一連の例外クラスです。
Rubyのライブラリ内部でシステムコールや一部のC言語関数が失敗したときに発生します。

実際には「EXXX」というクラスが定義されているわけではありません。「XXX」の部分は下記に列挙したような各種のエラー名が入ります。
例えば、[[m:File.open]] の内部でシステムコール [[man:open(2)]] がエラーコード ENOENT を返すと、Rubyは例外 Errno::ENOENT を発生させます。

Ruby は処理系がコンパイルされるときに、デフォルトで下記リストのような Errno::EXXX クラスを定義しようとします。#@since 1.9.1
動作環境に EXXX というエラーコードが存在しない場合、Rubyはその Errno::EXXX を Errno::NOERROR の別名として定義します。#@else
Errno::EXXX クラスは、対応するエラー名が動作環境に存在する場合のみ定義されます。このため、一部の環境にしか存在しないエラーコードについて rescue 節などで Errno::EXXX を利用すると
意図せずプログラムの可搬性を損なう場合があります。それを避けるには、エラーコードの種類を特定する必要がある場合を除いては [[c:SystemCallError]] で rescue するようにしてください。#@end


また、以下の一覧にはないシステムエラーが発生した場合は、
[[c:Errno::EXXX]] (XXX はエラー番号を表す 3 桁の数字)
という名前の例外クラスが自動的に作成され、発生します。
(これは Ruby 内部でのみ行われ、 Ruby プログラム上で [[m:SystemCallError.new]] に一覧にないコードを渡してもクラスは作成されません)

それぞれの例外が発生し得るケースについては、この項では記述しません。
例外を発生する各メソッドのマニュアルおよびオペレーティングシステムのマニュアルを参照してください。

=== エラー名リスト

個々の例外の意味はシステム依存です。
システムのマニュアル [[man:errno(3)]] を参照してください。
Microsoft Windows システムにおいては [[url:http://msdn2.microsoft.com/ja-jp/library/5814770t.aspx]] を参照してください。

  * ERROR
  * EPERM
  * ENOENT
  * ESRCH
  * EINTR
  * EIO
  * ENXIO
  * E2BIG
  * ENOEXEC
  * EBADF
  * ECHILD
  * EAGAIN
  * ENOMEM
  * EACCES
  * EFAULT
  * ENOTBLK
  * EBUSY
  * EEXIST
  * EXDEV
  * ENODEV
  * ENOTDIR
  * EISDIR
  * EINVAL
  * ENFILE
  * EMFILE
  * ENOTTY
  * ETXTBSY
  * EFBIG
  * ENOSPC
  * ESPIPE
  * EROFS
  * EMLINK
  * EPIPE
  * EDOM
  * ERANGE
  * EDEADLK
  * ENAMETOOLONG
  * ENOLCK
  * ENOSYS
  * ENOTEMPTY
  * ELOOP
  * EWOULDBLOCK
  * ENOMSG
  * EIDRM
  * ECHRNG
  * EL2NSYNC
  * EL3HLT
  * EL3RST
  * ELNRNG
  * EUNATCH
  * ENOCSI
  * EL2HLT
  * EBADE
  * EBADR
  * EXFULL
  * ENOANO
  * EBADRQC
  * EBADSLT
  * EDEADLOCK
  * EBFONT
  * ENOSTR
  * ENODATA
  * ETIME
  * ENOSR
  * ENONET
  * ENOPKG
  * EREMOTE
  * ENOLINK
  * EADV
  * ESRMNT
  * ECOMM
  * EPROTO
  * EMULTIHOP
  * EDOTDOT
  * EBADMSG
  * EOVERFLOW
  * ENOTUNIQ
  * EBADFD
  * EREMCHG
  * ELIBACC
  * ELIBBAD
  * ELIBSCN
  * ELIBMAX
  * ELIBEXEC
  * EILSEQ
  * ERESTART
  * ESTRPIPE
  * EUSERS
  * ENOTSOCK
  * EDESTADDRREQ
  * EMSGSIZE
  * EPROTOTYPE
  * ENOPROTOOPT
  * EPROTONOSUPPORT
  * ESOCKTNOSUPPORT
  * EOPNOTSUPP
  * EPFNOSUPPORT
  * EAFNOSUPPORT
  * EADDRINUSE
  * EADDRNOTAVAIL
  * ENETDOWN
  * ENETUNREACH
  * ENETRESET
  * ECONNABORTED
  * ECONNRESET
  * ENOBUFS
  * EISCONN
  * ENOTCONN
  * ESHUTDOWN
  * ETOOMANYREFS
  * ETIMEDOUT
  * ECONNREFUSED
  * EHOSTDOWN
  * EHOSTUNREACH
  * EALREADY
  * EINPROGRESS
  * ESTALE
  * EUCLEAN
  * ENOTNAM
  * ENAVAIL
  * EISNAM
  * EREMOTEIO
  * EDQUOT


== Class Methods

--- new() -> Errno::EXXX
--- new(error_message) -> Errno::EXXX
Errno::EXXX 객체를 리턴합니다.

@param error_message 에러 메시지를 나타내는 문자열

  p Errno::ENOENT
      # => #<Errno::ENOENT: No such file or directory>
  p Errno::ENOENT('message')
      # => #<Errno::ENOENT: No such file or directory - message>

#@since 1.8.0
--- ===(other) -> bool

other が SystemCallError のサブクラスのインスタンスで、
かつ、other.errno の値が self::Errno と同じ場合に真を返します。그렇지 않으면 false를 리턴합니다.

従って、特に other が self.kind_of?(other) である場合には [[m:Module#===]] と同様に真を返します。
その他に、 Errno::EXXX::Errno == Errno::EYYY::Errno である場合にも Errno::EXXX == Errno::EYYY.new は真を返します。

エラー名は異なるがエラーコードは同じであるような Errno::EXXX 例外をまとめて捕捉するために [[m:Module#===]] を上書きしていました。
しかし、Ruby 1.8 のリリース時点では同じ errno 値を持つクラスは一つしか作られないようになりました。そのため現在はこのメソッドは実質上 [[m:Module#===]] と同じ意味しかありません。

@param other 任意のオブジェクト

예
    p Errno::EAGAIN::Errno
    p Errno::EWOULDBLOCK::Errno
    begin
      raise Errno::EAGAIN, "pseudo error"
    rescue Errno::EWOULDBLOCK
      p $!    end
    
    # => 11
         11
         #<Errno::EAGAIN: pseudo error>
#@end

#@#== Constants

--- Errno -> Fixnum

Errno::EXXX の各クラスに対応するシステム依存のエラーコード値(整数)です。

예:

    p Errno::EAGAIN::Errno            # => 11
    p Errno::EWOULDBLOCK::Errno       # => 11

= class Errno::ERROR < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EPERM < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOENT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ESRCH < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EINTR < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EIO < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENXIO < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::E2BIG < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOEXEC < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EBADF < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ECHILD < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EAGAIN < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOMEM < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EACCES < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EFAULT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOTBLK < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EBUSY < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EEXIST < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EXDEV < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENODEV < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOTDIR < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EISDIR < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EINVAL < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENFILE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EMFILE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOTTY < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ETXTBSY < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EFBIG < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOSPC < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ESPIPE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EROFS < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EMLINK < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EPIPE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EDOM < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ERANGE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EDEADLK < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENAMETOOLONG < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOLCK < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOSYS < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOTEMPTY < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ELOOP < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EWOULDBLOCK < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOMSG < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EIDRM < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ECHRNG < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EL2NSYNC < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EL3HLT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EL3RST < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ELNRNG < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EUNATCH < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOCSI < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EL2HLT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EBADE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EBADR < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EXFULL < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOANO < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EBADRQC < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EBADSLT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EDEADLOCK < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EBFONT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOSTR < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENODATA < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ETIME < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOSR < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENONET < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOPKG < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EREMOTE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOLINK < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EADV < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ESRMNT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ECOMM < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EPROTO < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EMULTIHOP < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EDOTDOT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EBADMSG < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EOVERFLOW < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOTUNIQ < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EBADFD < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EREMCHG < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ELIBACC < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ELIBBAD < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ELIBSCN < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ELIBMAX < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ELIBEXEC < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EILSEQ < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ERESTART < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ESTRPIPE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EUSERS < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOTSOCK < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EDESTADDRREQ < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EMSGSIZE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EPROTOTYPE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOPROTOOPT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EPROTONOSUPPORT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ESOCKTNOSUPPORT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EOPNOTSUPP < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EPFNOSUPPORT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EAFNOSUPPORT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EADDRINUSE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EADDRNOTAVAIL < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENETDOWN < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENETUNREACH < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENETRESET < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ECONNABORTED < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ECONNRESET < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOBUFS < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EISCONN < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOTCONN < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ESHUTDOWN < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ETOOMANYREFS < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ETIMEDOUT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ECONNREFUSED < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EHOSTDOWN < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EHOSTUNREACH < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EALREADY < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EINPROGRESS < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ESTALE < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EUCLEAN < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENOTNAM < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::ENAVAIL < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EISNAM < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EREMOTEIO < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

= class Errno::EDQUOT < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.

#@since 1.9.1
= class Errno::NOERROR < SystemCallError
시스템 호출의 에러 코드를 나타내는 예외 클래스입니다.자세한 사항은 [[c:Errno::EXXX]]을 참조해주세요.
#@end
